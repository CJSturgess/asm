var asm = require('../asm'),
    url = require('url'),
    path = require('path'),
    fs = require('fs'),
    express = require('express'),
    app = express();

asm.serve.files = function(token) {
    var serverLoc = path.join(asm.server.dir, "server");
    
    var bannedIps = path.join(serverLoc, "banned-ips.json");
    var bannedPlayers = path.join(serverLoc, "banned-players.json");
    var ops = path.join(serverLoc, "ops.json");
    var serverProps = path.join(serverLoc, "server.properties");
    var whitelist = path.join(serverLoc, "whitelist.json");
    var log = path.join(serverLoc, "logs", "latest.log");
    
    var backups = path.join(asm.server.dir, "backups");
    
    app.get('/serve/:file', function(req, res) {
        var query = url.parse(req.url, true).query;
        var file = req.params.file;
        if (query.token == token) {
            if (file == "banned-ips") {
                fs.readFile(bannedIps, function(err, data) {
                    if (err) {
                        console.log("[serve.files] An error occurred while serving a file.");
                    } else {
                        res.send(data.toString());
                    }
                });
            } else if (file == "banned-players") {
                fs.readFile(bannedPlayers, function(err, data) {
                    if (err) {
                        console.log("[serve.files] An error occurred while serving a file.");
                    } else {
                        res.send(data.toString());
                    }
                });
            } else if (file == "ops") {
                fs.readFile(ops, function(err, data) {
                    if (err) {
                        console.log("[serve.files] An error occurred while serving a file.");
                    } else {
                        res.send(data.toString());
                    }
                });
            } else if (file == "server-properties") {
                fs.readFile(serverProps, function(err, data) {
                    if (err) {
                        console.log("[serve.files] An error occurred while serving a file.");
                    } else {
                        res.send(data.toString());
                    }
                });
            } else if (file == "whitelist") {
                fs.readFile(whitelist, function(err, data) {
                    if (err) {
                        console.log("[serve.files] An error occurred while serving a file.");
                    } else {
                        res.send(data.toString());
                    }
                });
            } else if (file == "log") {
                fs.readFile(log, function(err, data) {
                    if (err) {
                        console.log("[serve.files] An error occurred while serving a file.");
                    } else {
                        res.send(data.toString());
                    }
                });
            } else {
                res.send('{"err": "File not found."}');
            }
        } else {
            console.log("[serve.files] An attempt to view ".red + file.toString().red + "was denied due to an invalid token.".red);
            res.send('{"err": "Invalid token."}');
        }
    });
    
    console.log("[serve.files] Listening on port 3000.".green);
    app.listen(3000);
};