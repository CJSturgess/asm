var asm = require('../asm'),
    fs = require('fs'),
    path = require('path'),
    diff = require('diff');

asm.showLog = function() {
    if (!asm.server.running) {
        console.log("[showLog] The server is not yet running.".red);
    } else {
        console.log("[showLog] Reading log...".green);
        fs.readFile(path.join(asm.server.dir, "server", "logs", "latest.log"), function(err, data) {
            if (err) {
               console.log("[showLog] Error while loading log file.".red);
            } else {
               console.log(data.toString().cyan);
            }
        });
    }
};

asm.consoleToggle = false;
asm.showConsole = function() {
    if (!asm.consoleToggle) {
        console.log("[showConsole] Console output toggled on.".green);
        asm.consoleToggle = true;
    } else {
        console.log("[showConsole] Console output toggled off.".green);
        asm.consoleToggle = false;
    }
    var gameProc = asm.server.game.process;
    gameProc.stdout.on('data', function(data) {
        if (asm.consoleToggle) {
            var output = data.toString().replace('\n', '');
            console.log(output.cyan);
        }
    });
    
};

asm.adminSay = function(msg) {
    if (!asm.server.running) {
        console.log("[adminSay] The server is not yet running.".red);
    } else {
        var sendMsg = 'tellraw @a ["",{"text":"[AnchorHosting] ' + msg + '","color":"dark_red"}]';
        console.log("[adminSay] Saying: ".green + msg.toString().cyan);
        asm.server.game.command(sendMsg);
    }
}