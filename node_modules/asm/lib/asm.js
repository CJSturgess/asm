//Dependencies
var Syncano = require('syncano'),
    syncano = new Syncano({accountKey: '22c25dcc4008ad1f699d8ec3b8eff6413ad1b588'}),
    db = syncano.instance('divine-sea-1874').class('asm_nodes').dataobject();

var Promise = require('bluebird');

var colors = require('colors'),
    os = require('os'),
    path = require('path');

var cfg = require('../package.json'),
    Server = require('minecraft-server-admin');

//Export ASM
var asm = [];
module.exports = asm;

//Load function.
asm.load = function(ver) {
    var version = ver || cfg.version;
    console.log("Anchor Server Manager - ".bold.yellow + version.bold.yellow);
    
    //Instantiate the server variable
    this.server = new Server(path.join(__dirname, "../../../", "minecraft"));
    console.log("[load] Server variable instantiated.".green);
    this.server.exists(function(res) {
        asm.server.isPresent = res;
    });
};

//Get info regarding this host.
asm.getInfo = function(host) {
    return new Promise(function(resolve, reject) {
        var hostname = host || os.hostname(),
            info = [],
            filter = {
                "query": {"host":{"_eq": hostname}}
            };
        db.list(filter).then(function(res) {
            if (res.objects[0]) {
                info.host = hostname,
                info.created = res.objects[0].created,
                info.version = res.objects[0].version,
                info.size = res.objects[0].size,
                info.update = res.objects[0].update;
                resolve(info);
            } else {
                console.log("[getInfo] This server is not authorized!".red.bold);
                reject("Not Authorized");
                process.exit(1);
            }
        });
    });
};

//Create a new gameserver.
asm.createServer = function(ram) {
    return new Promise(function(resolve, reject) {
        var options = {
        "ram": ram
        };
        asm.server.create(options, function(err) {
            if (err) {
                console.log("[createServer] Server creation failed: ".red + err.red);
                reject("Server Creation Failed");
            } else {
                console.log("[createServer] Server creation succeeded!".green);
                resolve("Server Creation Succeeded");
            }
        });
    });
};

//Update an existing gameserver.
asm.doUpdate = function(ver) {
    return new Promise(function(resolve, reject) {
        var version = ver || '1.8.9';
        console.log("[doUpdate] Update to version ".green + version.green + " started.".green);
        var mcUrl = 'https://s3.amazonaws.com/Minecraft.Download/versions/' + version + '/minecraft_server.' + version + '.jar';
        asm.server.downloadJar(mcUrl, function(err) {
            if (err) {
                console.log("[doUpdate] Couldn't download jarfile: ".red + err.red.bold);
                reject("Download Failed");
            } else {
                console.log("[doUpdate] Finished download of jarfile: ".green + version.green);
                resolve("Download Complete");
            }
        });
    });
};